---
- name: "Authentik: Check appdata dir"
  stat:
   path: /opt/docker/appdata/authentik
  register: authentik_appdata

- name: "Authentik: Create appdata directory"
  file:
   path: /opt/docker/appdata/authentik
   state: directory
  when: not authentik_appdata.stat.exists

- name: "Authentik: Check templates dir"
  stat:
   path: /opt/docker/appdata/authentik/templates
  register: authentik_appdata_templates

- name: "Authentik: Create Authentik templates directory"
  file:
   path: /opt/docker/appdata/authentik/templates
   state: directory
  when: not authentik_appdata_templates.stat.exists

- name: "Authentik: Copy custom email template (tilin-varmistus)"
  copy:
   src: "templates/authentik/custom-templates/tilin-varmistus.html"
   dest: /opt/docker/appdata/authentik/templates/tilin-varmistus.html

- name: "Authentik: Docker Network"
  docker_network:
   name: authentik
- name: "Authentik: redis container"
  docker_container:
   name: authentik_redis
   image: redis:alpine
   pull: yes
   restart_policy: unless-stopped
   networks:
    - name: authentik

- name: "Authentik: server container"
  docker_container:
   name: authentik_server
   image: ghcr.io/goauthentik/server:2025.4.2
   #image: ghcr.io/goauthentik/dev-server:gh-next
   pull: yes
   command: server
   restart_policy: unless-stopped
   env:
    AUTHENTIK_EMAIL__FROM: "{{ authentik_email_from }}"
    AUTHENTIK_EMAIL__HOST: "{{ authentik_email_host }}"
    #AUTHENTIK_EMAIL__USERNAME: "{{ authentik_email_username }}"
    #AUTHENTIK_EMAIL__PASSWORD: "{{ authentik_email_password }}"
    AUTHENTIK_EMAIL__PORT: "{{ authentik_email_port }}"
    AUTHENTIK_EMAIL__USE_TLS: "{{ authentik_email_use_tls }}"
    AUTHENTIK_REDIS__HOST: authentik_redis
    AUTHENTIK_SECRET_KEY: "{{ authentik_secret_key }}"
    AUTHENTIK_LOG_LEVEL: "{{ authentik_log_level }}"
    AUTHENTIK_POSTGRESQL__HOST: "{{ authentik_psql_host }}"
    AUTHENTIK_POSTGRESQL__USER: "{{ authentik_psql_user }}"
    AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_psql_user }}"
    AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_psql_pw }}"
    AUTHENTIK_OUTPOSTS__CONTAINER_IMAGE_BASE: ghcr.io/goauthentik/dev-%(type)s:gh-%(build_hash)s
   volumes:
    - /opt/docker/appdata/authentik/templates:/templates
    - /opt/docker/appdata/authentik/media:/media
   ports:
    - "127.0.0.1:9000:9000"
    - "10.0.199.43:9300:9300"
   networks:
    - name: authentik
    - name: traefik_proxy
   labels:
    traefik.enable: "true"
    traefik.http.routers.authentik-rtr.entrypoints: "websecure"
    traefik.http.routers.authentik-rtr.rule: Host("login.pikaviestin.fi")
    traefik.http.routers.authentik-rtr.service: authentik-svc
    traefik.http.services.authentik-svc.loadbalancer.server.port: "9000"

- name: "Authentik: worker container"
  docker_container:
   name: authentik_worker
   image: ghcr.io/goauthentik/server:2025.4.2
   # That's beta
   #image: ghcr.io/goauthentik/dev-server:gh-next
   pull: yes
   command: worker
   restart_policy: unless-stopped
   # This is optional, and can be removed. If you remove this, the following will happen
   # - The permissions for the /backups and /media folders aren't fixed, so make sure they are 1000:1000
   # - The docker socket can't be accessed anymore
   user: root
   env:
    AUTHENTIK_EMAIL__FROM: "{{ authentik_email_from }}"
    AUTHENTIK_EMAIL__HOST: "{{ authentik_email_host }}"
    #AUTHENTIK_EMAIL__USERNAME: "{{ authentik_email_username }}"
    #AUTHENTIK_EMAIL__PASSWORD: "{{ authentik_email_password }}"
    AUTHENTIK_EMAIL__PORT: "{{ authentik_email_port }}"
    AUTHENTIK_EMAIL__USE_TLS: "{{ authentik_email_use_tls }}"
    AUTHENTIK_EMAIL__TIMEOUT: '10'
    AUTHENTIK_REDIS__HOST: authentik_redis
    AUTHENTIK_SECRET_KEY: "{{ authentik_secret_key }}"
    AUTHENTIK_LOG_LEVEL: "{{ authentik_log_level }}"
    AUTHENTIK_POSTGRESQL__HOST: "{{ authentik_psql_host }}"
    AUTHENTIK_POSTGRESQL__USER: "{{ authentik_psql_user }}"
    AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_psql_user }}"
    AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_psql_pw }}"
    AUTHENTIK_OUTPOSTS__CONTAINER_IMAGE_BASE: ghcr.io/goauthentik/dev-%(type)s:gh-%(build_hash)s
   volumes:
    - /opt/docker/appdata/authentik/backups:/backups
    - /opt/docker/appdata/authentik/media:/media
    - /opt/docker/appdata/authentik/templates:/templates
    - /var/run/docker.sock:/var/run/docker.sock
   networks:
    - name: authentik
